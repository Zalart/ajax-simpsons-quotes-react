{"version":3,"sources":["components/QuoteCard.js","App.js","reportWebVitals.js","index.js"],"names":["QuoteCard","this","props","quote","character","image","className","src","alt","React","Component","App","state","quoteCard","getQuote","bind","event","preventDefault","Axios","get","then","result","data","setState","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4TAGqBA,E,4JAEjB,WAAU,IAAD,EAC+BC,KAAKC,MAAjCC,EADH,EACGA,MAAOC,EADV,EACUA,UAAWC,EADrB,EACqBA,MAC1B,OACI,8BACI,yBAAQC,UAAU,YAAlB,UACI,qBAAKC,IAAKF,EAAOG,IAAKJ,IACtB,uCACI,qCAAaD,IACb,+BAAOC,gB,GAVQK,IAAMC,W,iBCCvCP,G,MAAQ,CAAE,MAAS,+DAAgE,UAAa,eAAgB,MAAS,8FAA+F,mBAAsB,UAG/NQ,E,kDACnB,WAAYT,GAAQ,IAAD,8BACjB,cAAMA,IACDU,MAAQ,CACXC,UAAWV,GAEb,EAAKW,SAAW,EAAKA,SAASC,KAAd,gBALC,E,4CAOnB,SAASC,GAAQ,IAAD,OACdA,EAAMC,iBAENC,IAAMC,IADM,oDAETC,MAAK,SAAAC,GAAM,OAAIA,EAAOC,QACtBF,MAAK,SAAAE,GACJ,EAAKC,SAAS,CACZV,UAAWS,EAAK,U,oBAKxB,WACE,IAAMT,EAAYZ,KAAKW,MAAMC,UAC7B,OACE,sBAAKP,UAAU,MAAf,UACE,wBAAQkB,QAASvB,KAAKa,SAAtB,2BACA,cAAC,EAAD,eAAeD,W,GAzBUJ,IAAMC,WCKxBe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d0748ace.chunk.js","sourcesContent":["import React from 'react';\nimport './QuoteCard.css';\n\nexport default class QuoteCard extends React.Component {\n\n    render() {\n        const { quote, character, image } = this.props;\n        return (\n            <div>\n                <figure className=\"QuoteCard\">\n                    <img src={image} alt={character} />\n                    <figcaption>\n                        <blockquote>{quote}</blockquote>\n                        <cite>{character}</cite>\n                    </figcaption>\n                </figure>\n            </div>\n        )\n    }\n\n}","import React from 'react';\nimport QuoteCard from './components/QuoteCard';\nimport Axios from 'axios';\nimport './App.css'\nconst quote = { \"quote\": \"Shut up, brain. I got friends now. I don't need you anymore.\", \"character\": \"Lisa Simpson\", \"image\": \"https://cdn.glitch.com/3c3ffadc-3406-4440-bb95-d40ec8fcde72%2FLisaSimpson.png?1497567512083\", \"characterDirection\": \"Right\" };\n\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quoteCard: quote\n    }\n    this.getQuote = this.getQuote.bind(this);\n  }\n  getQuote(event) {\n    event.preventDefault();\n    const url = 'https://simpsons-quotes-api.herokuapp.com/quotes';\n    Axios.get(url)\n      .then(result => result.data)\n      .then(data => {\n        this.setState({\n          quoteCard: data[0]\n        })\n      })\n  }\n\n  render() {\n    const quoteCard = this.state.quoteCard;\n    return (\n      <div className=\"App\" >\n        <button onClick={this.getQuote}>Get quoteCard</button>\n        <QuoteCard {...quoteCard} />\n\n      </div>\n    );\n  }\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}